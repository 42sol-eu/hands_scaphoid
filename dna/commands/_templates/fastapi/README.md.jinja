# {{ project_name }}

{{ description }}

## Features

- FastAPI web framework
- SQLAlchemy ORM with async support
- JWT authentication
- CORS enabled
- API documentation with Swagger/OpenAPI
- Database migrations with Alembic
- Environment-based configuration
- Docker support

## Quick Start

### Installation

```bash
# Install dependencies
pip install -r requirements.txt

# Set up environment variables
cp .env.example .env
# Edit .env with your configuration
```

### Database Setup

```bash
# Initialize database
alembic upgrade head
```

### Running the Application

```bash
# Development server
uvicorn main:app --reload

# Production server
uvicorn main:app --host 0.0.0.0 --port 8000
```

The API will be available at:
- API: http://localhost:8000
- Documentation: http://localhost:8000/docs
- Alternative docs: http://localhost:8000/redoc

## API Endpoints

### Authentication
- `POST /auth/register` - Register new user
- `POST /auth/login` - Login user
- `POST /auth/refresh` - Refresh access token

### Users
- `GET /users/me` - Get current user profile
- `PUT /users/me` - Update current user profile

## Configuration

Environment variables (create `.env` file):

```env
# Database
DATABASE_URL=sqlite:///./{{ project_name.lower() }}.db
# For PostgreSQL: postgresql://user:password@localhost/dbname

# Security
SECRET_KEY=your-secret-key-here
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080

# Application
PROJECT_NAME={{ project_name }}
VERSION=1.0.0
DESCRIPTION={{ description }}
```

## Development

### Database Migrations

```bash
# Create new migration
alembic revision --autogenerate -m "Description of changes"

# Apply migrations
alembic upgrade head

# Downgrade
alembic downgrade -1
```

### Testing

```bash
# Run tests
pytest

# Run with coverage
pytest --cov=.
```

## Docker

```bash
# Build image
docker build -t {{ project_name.lower() }} .

# Run container
docker run -p 8000:8000 {{ project_name.lower() }}
```

## Project Structure

```
{{ project_name.lower() }}/
├── main.py              # Application entry point
├── database.py          # Database configuration
├── models/              # SQLAlchemy models
├── routers/             # API route handlers
├── schemas/             # Pydantic schemas
├── auth/                # Authentication logic
├── core/                # Core functionality
├── migrations/          # Alembic migrations
├── tests/               # Test files
├── requirements.txt     # Dependencies
├── .env.example         # Environment template
├── Dockerfile           # Docker configuration
└── README.md            # This file
```

## License

{{ license }}

## Author

{{ author }}