name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["{{ python_version }}", "3.12"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ "{{ matrix.python-version }}" }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ "{{ matrix.python-version }}" }}
    
{% if package_manager == "uv" %}
    - name: Install uv
      uses: astral-sh/setup-uv@v2
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install dependencies
      run: |
        uv pip install -e .
        uv pip install pytest{% if use_black %} black{% endif %}{% if use_flake8 %} flake8{% endif %}{% if use_mypy %} mypy{% endif %}
{% elif package_manager == "poetry" %}
    - name: Install Poetry
      uses: snok/install-poetry@v1
    
    - name: Install dependencies
      run: poetry install
{% else %}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest{% if use_black %} black{% endif %}{% if use_flake8 %} flake8{% endif %}{% if use_mypy %} mypy{% endif %}
{% endif %}
    
{% if enable_cache %}
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
{% if package_manager == "poetry" %}
          ~/.cache/pypoetry/virtualenvs
{% endif %}
        key: ${{ "{{ runner.os }}" }}-python-${{ "{{ matrix.python-version }}" }}-${{ "{{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/poetry.lock') }}" }}
        restore-keys: |
          ${{ "{{ runner.os }}" }}-python-${{ "{{ matrix.python-version }}" }}-
{% endif %}
    
{% if use_black %}
    - name: Check code formatting with Black
      run: {% if package_manager == "poetry" %}poetry run {% elif package_manager == "uv" %}uv run {% endif %}black --check .
{% endif %}
    
{% if use_flake8 %}
    - name: Lint with Flake8
      run: {% if package_manager == "poetry" %}poetry run {% elif package_manager == "uv" %}uv run {% endif %}flake8 .
{% endif %}
    
{% if use_mypy %}
    - name: Type check with MyPy
      run: {% if package_manager == "poetry" %}poetry run {% elif package_manager == "uv" %}uv run {% endif %}mypy .
{% endif %}
    
    - name: Test with pytest
      run: {% if package_manager == "poetry" %}poetry run {% elif package_manager == "uv" %}uv run {% endif %}{{ test_command }}
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '{{ python_version }}'