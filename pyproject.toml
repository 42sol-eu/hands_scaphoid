[project]
name = "hands-scaphoid"
version = "2025.0.3"
description = "Secure shell execution context manager *for Python with ease*"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Andreas Felix HÃ¤berle", email = "felix@42sol.eu"},
]
requires-python = ">=3.13"
dependencies = [
    "click>=8.0.0",
    "cog>=0.16.7",
    "pytest-cov>=7.0.0",
    "rich>=13.0.0",
    "rich-click>=1.9.1",
    "ruff>=0.13.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
docs = [
    "mkdocs>=1.5",
    "mkdocs-material>=9.0",
    "mkdocstrings[python]>=0.20",
    "mkdocs-include-markdown-plugin>=0.9",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
# addopts = [
#     "--cov=hands_scaphoid",
#     "--cov-report=term-missing",
# ]

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pylint]
disable = [
    "W1203",  # logging-fstring-interpolation
]

[tool.pylint.messages_control]
disable = [
    "W1203",  # logging-fstring-interpolation: Use lazy % formatting in logging functions
]

[tool.ruff]
# Ruff configuration - disable similar logging checks
ignore = [
    "G201",  # Use `.exception()` instead of `.error()` when logging an exception
    "G202",  # Avoid bare `except:` in logging
    "G203",  # Use lazy % formatting for logging
    "G204",  # Use lazy % formatting for logging (fstring)
]

[tool.ruff.lint]
ignore = [
    "G201",  # logging-not-lazy
    "G202",  # logging-not-lazy  
    "G203",  # logging-not-lazy
    "G204",  # logging-fstring-interpolation (equivalent to pylint's W1203)
]

# TODO: add cli commands  ... in sections
[project.scripts]
hands-scaphoid = "hands_scaphoid.main:main"
#extract = "hands_scaphoid.cli:extract"
#compress = "hands_scaphoid.cli:compress"